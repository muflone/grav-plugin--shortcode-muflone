en:
  PLUGIN_SHORTCODE_MUFLONE:
    INSTALL:
      DEBIAN:
        TITLE: Installation on Debian, Ubuntu and derivatives
        TEXT1: It's possible to download the <strong>deb</strong> package from the <a href="download">Download page</a> and install it using:
        COMMANDS: |
          cd "~/folder with the downloaded file"
          sudo dpkg -i "file name.deb"
      ARCHLINUX:
        TITLE: Installation on Arch Linux and derivatives
        TEXT1: It's possible to download the <strong>tar.xz</strong> package from the <a href="download">Download page</a> and install it using:
        PACKAGE: In the official <strong>community repository</strong> you can find the latest available version, it can be installed using the command: <code>pacman -S %s</code>.
        AURPACKAGE: In the AUR you can find the latest available version, it can be downloaded and built using yaourt (or a similar AUR helper) using <code>yaourt -S %s</code> and then following the AUR helper instructions.
        DEVELOPMENT: The development version is also available in the AUR and can be installed using yaourt (or a similar AUR helper) with <code>yaourt -S %s</code>.
        COMMANDS: |
          cd "~/folder with the downloaded file"
          sudo pacman -U "file name.pkg.tar.xz"
      SOURCE:
        TITLE: Installation from source code
        TEXT1: If the prebuilt package will not be available for your distribution you can use the source code package to install %s using:
        TEXT2: After the installation, if no errors were reported the folder build can be removed from root or via <code>sudo rm -rf "build"</code> and the same for the downloaded source package.
        TEXT3: After executing the manual installation from source code an automatic software uninstall will not be possibile but you will have to manually delete all the installed files that were reported during the last installation step.
        COMMANDS: |
          cd "~/folder with the downloaded file"
          mkdir build
          tar xzf "file name.pkg.tar.gz" -C build
          cd build/%s-*
          python2 setup.py build
          sudo python2 setup.py install
          sudo gtk-update-icon-cache -q /usr/share/icons/hicolor/
          sudo xdg-icon-resource forceupdate
          sudo xdg-desktop-menu forceupdate
          cd ..
      INDEX:
        TITLE: Installation
        TEXT1: >
          The stable versions released with source code and prebuilt packages
          are linked in the <a href="download">Download page</a>.
          For information about installation from packages or source code
          please refer to the <a href="install">Installation page</a>.
        TEXT2: The %s development version source code is <a href="%s" target="_blank">available on GitHub</a>.
      REMMINA_PLUGIN_BUILDER:
        TITLE: Installation from source code
        TEXT1: To build %s from the source code you will need also <strong>Remmina Plugin Builder</strong>, a minimal development environment to build plugins for Remmina.
        TEXT2: Download Remmina Plugin Builder from the <a href="../remmina-plugin-builder/index">Project page</a> and refer to the <a href=../remmina-plugin-builder/install>Installation page</a>.
        TEXT3: The building process simply needs the extraction of both Remmina Plugin Builder and %s source code using:
        COMMANDS1: |
          cd "~/folder with the downloaded files"
          tar xzf remmina-plugin-builder-*.tar.gz
          tar xzf %s-*.tar.gz
        TEXT4: Next you will need to compile the plugin using:
        COMMANDS2: |
          mkdir build
          cp -r remmina-plugin-builder-*/* build
          cp -r %s-*/* build/remmina-plugin-to-build
          cd build
          cmake -DCMAKE_INSTALL_PREFIX=/usr .
          make
          sudo make install
          sudo gtk-update-icon-cache -q /usr/share/icons/hicolor/
          cd ..
    LICENSE:
      INDEX:
        TITLE: License
        TEXT1: >
          <strong>%s</strong> is distributed as open source code <a href="%s" target="_blank">available on GitHub</a>
          under <a href="https://www.gnu.org/licenses/gpl-2.0.html" target="_blank">GNU GPL-2+ license</a>
          (GNU General Public License version 2 or higher).
        TEXT2: >
          The software is supplied as is and it doesn't offer any warranty.
          Anyone can fork the project, modify and distribute it under the same GNU GPL-2+ license.
    TRANSLATIONS:
      INDEX:
        TITLE: Translations
        TEXT1: <strong>%s</strong> is actually translated in the following languages:
        TEXT2: Translators are needed, please help in translating %s in others languages.
        TEXT3: >
          Please submit your translations to <a href="%s" target="_blank">Transifex</a>
          or file an issue in <a href="%s/issues" target="_blank">GitHub bugtracker</a>
          or <a href="%s/pulls" target="_blank">pull a request on GitHub</a>.
it:
  PLUGIN_SHORTCODE_MUFLONE:
    INSTALL:
      DEBIAN:
        TITLE: Installazione su Debian, Ubuntu e derivate
        TEXT1: E' possibile scaricare il pacchetto <strong>deb</strong> dalla <a href="download">pagina Scarica</a> e installarlo utilizzando:
        COMMANDS: |
          cd "~/cartella con il file scaricato"
          sudo dpkg -i "nome del file.deb"
      ARCHLINUX:
        TITLE: Installazione su Arch Linux e derivate
        TEXT1: E' anche possibile scaricare il pacchetto <strong>tar.xz</strong> dalla <a href="download">pagina Scarica</a> e installarlo utilizzando:
        PACKAGE: Nel repository ufficiale <strong>community</strong> è possibile trovare l'ultima versione disponibile, e può essere installata usando il comando <code>pacman -S %s</code>.
        AURPACKAGE: In AUR è presente l'ultima versione disponibile, è possibile scaricarla e compilarla utilizzando yaourt (o un analogo gestore per AUR) con <code>yaourt -S %s</code> e seguire le istruzioni del gestore di AUR.
        DEVELOPMENT: E' anche disponibile la versione di sviluppo in AUR e può essere installata utilizzando yaourt (o un analogo gestore per AUR) con <code>yaourt -S %s</code>.
        COMMANDS: |
          cd "~/cartella con il file scaricato"
          sudo pacman -U "nome del file.pkg.tar.xz"
      SOURCE:
        TITLE: Installazione dal codice sorgente
        TEXT1: Se non fosse disponibile il pacchetto preassemblato per la propria distribuzione è possibile utilizzare il pacchetto col codice sorgente per installare %s utilizzando:
        TEXT2: Al termine dell'installazione, se non sono stati riportati errori sarà possibile eliminare la cartella build da root oppure tramite <code>sudo rm -rf "build"</code> e il file sorgente scaricato.
        TEXT3: Dopo aver eseguito la procedura di installazione manuale da codice sorgente non sarà possibile disinstallare automaticamente il software ma sarà necessario eliminare manualmente tutti i files installati che sono indicati durante l'ultimo passaggio del processo di installazione.
        COMMANDS: |
          cd "~/cartella con il file scaricato"
          mkdir build
          tar xzf "nome del file.pkg.tar.gz" -C build
          cd build/%s-*
          python2 setup.py build
          sudo python2 setup.py install
          sudo gtk-update-icon-cache -q /usr/share/icons/hicolor/
          sudo xdg-icon-resource forceupdate
          sudo xdg-desktop-menu forceupdate
          cd ..
      INDEX:
        TITLE: Installazione
        TEXT1: >
          I rilasci delle versioni stabili con codice sorgente e pacchetti
          precompilati sono presenti nella <a href="download">pagina Scarica</a>.
          Per informazioni sull'installazione da pacchetti o con codice sorgente
          fare riferimento alla <a href="install">pagina Installazione</a>.
        TEXT2: Il codice sorgente di %s è <a href="%s" target="_blank">disponibile su GitHub</a> con la versione attualmente in sviluppo.
      REMMINA_PLUGIN_BUILDER:
        TITLE: Installazione dal codice sorgente
        TEXT1: Per compilare %s dal codice sorgente è necessario avere anche <strong>Remmina Plugin Builder</strong>, un ambiente di sviluppo minimale per la compilazione di plugin per Remmina.
        TEXT2: Scaricare Remmina Plugin Builder dalla <a href="../remmina-plugin-builder/index">pagina del progetto</a> e fare riferimento alla <a href=../remmina-plugin-builder/install>pagina Installazione</a>.
        TEXT3: Il processo di compilazione richiede semplicemente l'estrazione del codice sorgente sia di Remmina Plugin Builder sia di %s utilizzando:
        COMMANDS1: |
          cd "~/cartella con il file scaricato"
          tar xzf remmina-plugin-builder-*.tar.gz
          tar xzf %s-*.tar.gz
        TEXT4: Quindi sarà necessario compilare il plugin con:
        COMMANDS2: |
          mkdir build
          cp -r remmina-plugin-builder-*/* build
          cp -r %s-*/* build/remmina-plugin-to-build
          cd build
          cmake -DCMAKE_INSTALL_PREFIX=/usr .
          make
          sudo make install
          sudo gtk-update-icon-cache -q /usr/share/icons/hicolor/
          cd ..
    LICENSE:
      INDEX:
        TITLE: Licenza
        TEXT1: >
          <strong>%s</strong> viene distribuito sotto forma di codice sorgente aperto <a href="%s" target="_blank">disponibile su GitHub</a>
          sotto <a href="https://www.gnu.org/licenses/gpl-2.0.html" target="_blank">licenza GNU GPL-2+</a>
          (GNU General Public License versione 2 o superiore).
        TEXT2: >
          Il software viene fornito così com'è e non è offerto alcun tipo di garanzia.
          Chiunque può derivare il progetto, modificarlo e distribuirlo purchè il nuovo progetto derivato sia rilasciato sotto la stessa licenza GNU GPL-2+.
    TRANSLATIONS:
      INDEX:
        TITLE: Traduzioni
        TEXT1: <strong>%s</strong> è attualmente tradotto nelle seguenti lingue:
        TEXT2: Sono richiesti traduttori, aiutaci a tradurre %s in altre lingue.
        TEXT3: >
          Prego compila le tue traduzioni su <a href="%s" target="_blank">Transifex</a>
          oppure apri una richiesta sul sistema di <a href="%s/issues" target="_blank">segnalazioni di GitHub</a>
          oppure apri una <a href="%s/pulls" target="_blank">richiesta di pull su GitHub</a>.
